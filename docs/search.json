[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "environment",
    "section": "",
    "text": "Introduction\nenvironment is a sub-project of the BioForest project aimed at gathering environmental variables of climate (TerraClimate), soil (SoilGrids) and landscape (TMF) for data preparation within the project."
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "environment",
    "section": "Usage",
    "text": "Usage\nenvironment takes advantage of snakemake and conda for data retrieval defined by the sites list. First check the sites list in config/sites.tsv and you can run the whole workflow with snakemake -j #cores –use-conda –keep-going . Further details on usage can be found in https://bioforest-project.github.io/environment/10_methods.html . Then all analyses rely on the quarto documents (files.qmd) that can be run with R and associated environment defined with renv."
  },
  {
    "objectID": "index.html#project",
    "href": "index.html#project",
    "title": "environment",
    "section": "Project",
    "text": "Project\nenvironment includes:\n\nsnakemake and conda workflow for automatic data retrieval:\n\nWorkflow definition in Snakefile\nWorflow scripts in scripts/\nWorkflow configuration in config/\nconda environments in envs/\n\nAnalyse of the data with associated documentation and figures:\n\nReproductive analyses in files.qmd\nResulting pages in docs/\nDocument structure definition in _quarto.yml\n\nData in data/\nIntermediary files in outputs/\nR environment definition with renv in renv/ and renv/lock\nR files (.Rbuildignore , .Rdata , .Rprofile , .Rhistory)\nGit and GitHub files (.gitignore , .github/)\nProject documentation (README.qmd , README.md , NEWS.md )\n\n\nShould we add a license?"
  },
  {
    "objectID": "index.html#contribution",
    "href": "index.html#contribution",
    "title": "environment",
    "section": "Contribution",
    "text": "Contribution\nYou can contribute to the project by forking the repository on github and cloning the fork to your machine using several options, including GitHub desktop GUI. Further informations on contribution are detailed in the online document: https://bioforest-project.github.io/environment/98_contributing.html."
  },
  {
    "objectID": "index.html#help",
    "href": "index.html#help",
    "title": "environment",
    "section": "Help",
    "text": "Help\nPlease preferentially create an issue on GitHub for any questions, bugs or help needed regarding environment: https://github.com/Bioforest-project/environment/issues . You may however reach us by mail with people from the core group (see below)."
  },
  {
    "objectID": "index.html#core-group",
    "href": "index.html#core-group",
    "title": "environment",
    "section": "Core group",
    "text": "Core group\n\nSylvain Schmitt (sylvain.schmitt@cirad.fr)\nCamille Piponiot-Laroche (camille.piponiot-laroche@cirad.fr)\nGéraldine Derroire (geraldine.derroire@cirad.fr)\nMithila Unkule (mithila.unkule@fondationbiodiversite.fr)\nIrié Cazimir Zo-Bi (iczobi@gmail.com)\nAnand Roopsind (aroopsind@gmail.com)\n\nThe whole group consist of participants to the Bioforest project."
  },
  {
    "objectID": "01_sites.html",
    "href": "01_sites.html",
    "title": "Sites",
    "section": "",
    "text": "This page describes all sites and plots coordinates preparation and visualization.\nFirst we had to prepare WGS84 - World Geodetic System 1984 coordinates from WGS 84 UTM zone 21N for Iwokrama.\n\n\nCode\nsites %&gt;%\n  mutate(plot = as.character(plot)) %&gt;%\n  unnest(plot) %&gt;%\n  filter(site == \"Iwokrama\") %&gt;%\n  select(\n    plot,\n    `Location (WGS UTM 21N) SW corners...5`,\n    `Location (WGS UTM 21N) SW corners...6`\n  ) %&gt;%\n  rename(\n    lat = `Location (WGS UTM 21N) SW corners...5`,\n    lon = `Location (WGS UTM 21N) SW corners...6`\n  ) %&gt;%\n  sf::st_as_sf(coords = c(\"lat\", \"lon\"), crs = \"EPSG:32621\") %&gt;%\n  sf::st_transform(4326) %&gt;%\n  sf::st_coordinates() %&gt;%\n  as_data_frame() %&gt;%\n  write_tsv(\"test.tsv\")\n\n\n\n\nCode\nsites &lt;- googlesheets4::read_sheet(\"https://docs.google.com/spreadsheets/d/1fq2owxMBLBwwibcdw2uQQFxnIhsMbaH4Qcj_xUwVvSQ/edit?gid=0#gid=0\") %&gt;%\n  mutate(plot = as.character(plot)) %&gt;%\n  unnest(plot) %&gt;%\n  select(site, plot, latitude, longitude) %&gt;%\n  na.omit() %&gt;%\n  write_tsv(\"outputs/sites.tsv\")\n\n\nWe obtained the following sites and plots distribution globally.\n\nOther sites location might unprecised and should be checked against forest landscape data.\n\n\n\nCode\nread_tsv(\"outputs/sites.tsv\") %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %&gt;%\n  leaflet() %&gt;%\n  addTiles() %&gt;%\n  addMarkers(label = ~ paste(site, plot),\n             labelOptions = labelOptions(noHide = FALSE))\n\n\n\n\nSites and plots locations.\n\n\nMost sites showed a small dispersion of plots covering up 10 km2 at the exception of BAFOG & Sao Nicolau covering tenth of km2 and Iwokrama covering more than 150 km2 .\n\n\nCode\nread_tsv(\"outputs/sites.tsv\") %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %&gt;%\n  group_by(site) %&gt;%\n  summarise(n = n()) %&gt;%\n  st_convex_hull() %&gt;%\n  mutate(area = as.numeric(set_units(st_area(.), \"km^2\"))) %&gt;%\n  st_drop_geometry() %&gt;%\n  ggplot(aes(n, area)) +\n  geom_point() +\n  theme_bw() +\n  xlab(\"Number of plots\") +\n  ylab(expression(paste(\"Area [\", km^2, \"]\"))) +\n  ggrepel::geom_text_repel(aes(label = site)) +\n  scale_y_sqrt()\n\n\n\n\n\nNumber of sites and total plots surface."
  },
  {
    "objectID": "10_methods.html#origin",
    "href": "10_methods.html#origin",
    "title": "Methods",
    "section": "Origin",
    "text": "Origin\n\nTerraClimate is a dataset of monthly climate and climatic water balance for global terrestrial surfaces from 1958-2019. These data provide important inputs for ecological and hydrological studies at global scales that require high spatial resolution and time-varying data. All data have monthly temporal resolution and a ~4-km (1/24th degree) spatial resolution. The data cover the period from 1958-2020. We plan to update these data periodically (annually). (Abatzoglou et al. 2018)\n\n\nSoilGrids is a system for global digital soil mapping that uses state-of-the-art machine learning methods to map the spatial distribution of soil properties across the globe. SoilGrids prediction models are fitted using over 230 000 soil profile observations from the WoSIS database and a series of environmental covariates. Covariates were selected from a pool of over 400 environmental layers from Earth observation derived products and other environmental information including climate, land cover and terrain morphology. The outputs of SoilGrids are global soil property maps at six standard depth intervals (according to the GlobalSoilMap IUSS working group and its specifications) at a spatial resolution of 250 meters. Prediction uncertainty is quantified by the lower and upper limits of a 90% prediction interval. The additional uncertainty layer displayed at soilgrids.org is the ratio between the inter-quantile range and the median. The SoilGrids maps are publicly available under the CC-BY 4.0 License. (Poggio et al. 2021)\n\n\nTMF: The European Commission’s Joint Research Centre developed this new dataset on forest cover change in tropical moist forests (TMF) using 42 years of Landsat time series. The wall-to-wall maps at 0.09 ha resolution (30m) depict the TMF extent and the related disturbances (deforestation and degradation), and post-deforestation recovery (or forest regrowth) through two complementary thematic layers: a transition map and an annual change collection over the period 1990-2023. Each disturbance (deforestation or degradation) is characterized by its timing and intensity. Deforestation refers to a change in land cover (from forest to non-forested land) when degradation refers to a temporary disturbance in a forest remaining forested such as selective logging, fires and unusual weather events (hurricanes, droughts, blowdown). (European Commission. Joint Research Centre. 2020)"
  },
  {
    "objectID": "10_methods.html#retrieval",
    "href": "10_methods.html#retrieval",
    "title": "Methods",
    "section": "Retrieval",
    "text": "Retrieval\nWe developed a snakemake and conda python workflow for automatic climate data gathering from global databases.\n\nInstallation\nThis workflow is built on:\n\nPython ≥3.5\nMambaforge\nSnakemake ≥5.24.1\n\nconda activate base\nmamba create -c conda-forge -c bioconda -n snakemake snakemake\nconda activate snakemake\nsnakemake --help\nOnce installed simply clone the workflow:\ngit clone git@github.com:Bioforest-project/environment.git\ncd DownClim\nsnakemake -np \n\n\nSnakemake\nTo run the worklfow you can use the following commands that are by order (1) a dry run to test and list the operations, (2) the creation of a direct acyclic graph with the workflow, and (3) a run using a single core and the conda environment.\nsnakemake -np # dry run\nsnakemake --dag | dot -Tsvg &gt; dag/dag.svg # dag\nsnakemake -j 1 --use-conda # local run (test)\nIn terms of benchmarking, on my personal computer with 10 cores the worklow took 45 minutes.\n\n\nConda\nTo test the scripts individually you can build the needed conda environment as follow:\nmamba env create -f envs/bioforest-env.yml # init\nmamba env update -f envs/bioforest-env.yml --prune # update\nmamab activate bioforest-env"
  },
  {
    "objectID": "10_methods.html#analyses",
    "href": "10_methods.html#analyses",
    "title": "Methods",
    "section": "Analyses",
    "text": "Analyses\nThis is mainly data preparation, so the variables are only plotted and their correlation examined using principal component analyses.\n\nTo be developed?\n\n\n\n\n\nAbatzoglou, John T., Solomon Z. Dobrowski, Sean A. Parks, and Katherine C. Hegewisch. 2018. “TerraClimate, a High-Resolution Global Dataset of Monthly Climate and Climatic Water Balance from 19582015.” Scientific Data 5 (1). https://doi.org/10.1038/sdata.2017.191.\n\n\nEuropean Commission. Joint Research Centre. 2020. Long-term monitoring of tropical moist forest extent (from 1990 to 2019): description of the dataset. LU: Publications Office. https://doi.org/10.2760/70243.\n\n\nPoggio, Laura, Luis M. de Sousa, Niels H. Batjes, Gerard B. M. Heuvelink, Bas Kempen, Eloi Ribeiro, and David Rossiter. 2021. “SoilGrids 2.0: Producing Soil Information for the Globe with Quantified Spatial Uncertainty.” SOIL 7 (1): 217–40. https://doi.org/10.5194/soil-7-217-2021."
  },
  {
    "objectID": "13_climate.html",
    "href": "13_climate.html",
    "title": "Climate",
    "section": "",
    "text": "We retrieved all data from TerraClimate detailed below (Abatzoglou et al. 2018). This could be compared to site data, but with issues regarding site data standardization, representativeness, and validation.\n\nET: Actual evapotranspiration, mm\nCWD: Climate water deficit, mm\nTmax: Maximum temperature, °C\nTmin: Minimum temperature, °C\nPDSI: Palmer Drought Severity Index\nPET: Potential evapotranpiration, mm\nPr: precipitation, mm\nVPD: Vapour Pressure Deficit, kPa\n\n\n\nCode\nlist.files(\"data/climate/\", full.names = TRUE) %&gt;%\n  read_tsv() %&gt;%\n  group_by(site) %&gt;%\n  mutate(\n    aet = aet * .1, def = def * .1, pdsi = pdsi * .01, pet = pet * .1,\n    tmmn = tmmn * .1, tmmx = tmmx * .1, vpd = vpd * .01\n  ) %&gt;%\n  write_tsv(\"outputs/climate.tsv\")\n\n\nFor a quick exploration of each site climatology we first had a look to umbrothermal diagrams for the mean climate of each site, opposing for instance highly seasonal monsoon regimes from India un Uppangala to less seasonal regimes from Missiones in Argentina.\n\n\nCode\nread_tsv(\"outputs/climate.tsv\") %&gt;%\n  select(-lon, -lat) %&gt;%\n  group_by(site, month) %&gt;%\n  summarise_all(mean) %&gt;%\n  ggplot(aes(x = month)) +\n  geom_col(aes(y = pr / 30), fill = \"grey\", col = NA) +\n  geom_line(aes(y = tmmn, col = \"maximum\")) +\n  geom_line(aes(y = tmmx, col = \"minimum\")) +\n  theme_bw() +\n  xlab(\"\") +\n  scale_x_continuous(\n    breaks = 1:12,\n    labels = c(\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\")\n  ) +\n  scale_y_continuous(\n    name = \"Temperature (°C)\",\n    sec.axis = sec_axis(trans = ~ . * 30, name = \"Precipitation (mm)\")\n  ) +\n  theme(\n    axis.title.y = element_text(color = \"black\"),\n    axis.title.y.right = element_text(color = \"grey\")\n  ) +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  facet_wrap(~site)\n\n\n\n\n\nUmbrothermal diagrams for the mean climate of each site.\n\n\n\n\nLooking more in depth to each variable per site, plot and month better showed the climatology for each variable with relative low variation within site but large variation among sites.\n\n\nCode\nread_tsv(\"outputs/climate.tsv\") %&gt;%\n  gather(variable, value, -site, -month, -plot, -lat, -lon) %&gt;%\n  mutate(var_long = recode(variable,\n    \"aet\" = \"Actual evapotranspiration [ mm ]\",\n    \"def\" = \"Climate water deficit [ mm ]\",\n    \"pdsi\" = \"Palmer Drought Severity Index\",\n    \"pet\" = \"Potential evapotranspiration [ mm ]\",\n    \"pr\" = \"Precipitation [ mm ]\",\n    \"tmmn\" = \"Minimum temperature [ °C ]\",\n    \"tmmx\" = \"Maximum temperature [ °C ]\",\n    \"vpd\" = \"Vapor pressure deficit [ kPA ]\"\n  )) %&gt;%\n  ggplot(aes(month, value, col = site, group = paste(site, plot))) +\n  geom_line() +\n  facet_wrap(~var_long, scales = \"free_y\") +\n  xlab(\"\") +\n  ylab(\"\") +\n  scale_x_continuous(\n    breaks = 1:12,\n    labels = c(\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\")\n  ) +\n  theme_bw() +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nClimate variables per site, plot and month.\n\n\n\n\nTo ease plot and sites comparisons, we derived yearly metrics of sum (evapotranspiration, climatic water deficit, precipitation), minimum (minimum temperature), or maximum (palmer drought index, maximum temperature, vapour pressure deficit) depending on the variables. This better revealed among sites differences with for instance highest CWD at Uppangala despite highest total precipitation.\n\nOther indices could be derived such as widely used bioclimatic variables.\n\n\n\nCode\nread_tsv(\"outputs/climate.tsv\") %&gt;%\n  group_by(site, plot) %&gt;%\n  summarise(\n    aet = sum(aet), def = sum(def), pdsi = max(pdsi), pet = sum(pet),\n    pr = sum(pr), tmax = max(tmmx), tmin = min(tmmn), vpd_max = max(vpd)\n  ) %&gt;%\n  gather(variable, value, -site, -plot) %&gt;%\n  mutate(var_long = recode(variable,\n    \"aet\" = \"Evapotranspiration [ mm ]\",\n    \"def\" = \"Climate water deficit [ mm ]\",\n    \"pdsi\" = \"Palmer Drought Severity Index\",\n    \"pdsi_max\" = \"Max PDSI\",\n    \"pdsi_mean\" = \"Mean PDSI\",\n    \"pet\" = \"Pot evapotranspiration [ mm ]\",\n    \"pr\" = \"Precipitation [ mm ]\",\n    \"tmin\" = \"Min temperature [ °C ]\",\n    \"tmax\" = \"Max temperature [ °C ]\",\n    \"vpd_max\" = \"Max VPD [ kPA ]\"\n  )) %&gt;%\n  ggplot(aes(site, value, fill = site, group = paste(site, plot))) +\n  geom_col(position = \"dodge\") +\n  facet_wrap(~var_long, scales = \"free_x\") +\n  theme_bw() +\n  coord_flip() +\n  theme(legend.position = \"none\", axis.title = element_blank(),\n        axis.text.y = element_text(size = 6))\n\n\n\n\n\nYearly mean climate variables per site.\n\n\n\n\nThe first ordination axis retained almost half of the variations of the 8 climate variables.\n\nThis is a very quick interpretation of the figure and should be explored more in depth.\n\n\n\nCode\nlibrary(ggfortify)\ndata &lt;- read_tsv(\"outputs/climate.tsv\") %&gt;%\n  group_by(site, plot) %&gt;%\n  summarise(\n    et = sum(aet), cwd = sum(def), pdsi = max(pdsi), pet = sum(pet),\n    pr = sum(pr), tmax = max(tmmx), tmin = min(tmmn), vpd = max(vpd)\n  ) %&gt;%\n  ungroup()\npca &lt;- prcomp(data %&gt;% select(-site, -plot), scale. = TRUE)\nautoplot(pca,\n  loadings = TRUE, loadings.label = TRUE,\n  loadings.label.repel = TRUE,\n  data = data, colour = \"site\"\n) +\n  theme_bw() +\n  coord_equal() +\n  scale_color_discrete(\"\")\n\n\n\n\n\nYearly mean climate variables PCA per site and plot.\n\n\n\n\n\n\n\n\nAbatzoglou, John T., Solomon Z. Dobrowski, Sean A. Parks, and Katherine C. Hegewisch. 2018. “TerraClimate, a High-Resolution Global Dataset of Monthly Climate and Climatic Water Balance from 19582015.” Scientific Data 5 (1). https://doi.org/10.1038/sdata.2017.191."
  },
  {
    "objectID": "14_soil.html",
    "href": "14_soil.html",
    "title": "Soil",
    "section": "",
    "text": "We retrieved all data from SoilGrids detailed below (Poggio et al. 2021), but the spatial extrapolation and reference points have some issues as for instance in French Guiana. This could be compared to site data, but with issues regarding site data standardization, representativeness, and validation.\n\nClay: Proportion of clay particles (&lt; 0.002 mm) in the fine earth fraction, %\nSand: Proportion of sand particles (&gt; 0.05 mm) in the fine earth fraction, %\nSilt: Proportion of silt particles (≥ 0.002 mm and ≤ 0.05 mm) in the fine earth fraction, %\nBD: Bulk density of the fine earth fraction, kg dm³\nCEC: Cation Exchange Capacity of the soil, cmolC kg-1\nCF: Volumetric fraction of coarse fragments (&gt; 2 mm), cm3 100cm-3\nN: Total nitrogen, g kg-1\npH: Soil pH\nSOC: Soil organic carbon content in the fine earth fraction, g kg-1\nOCD: Organic carbon density, kg dm³\nOCS: Organic carbon stocks, kg m2\n\n\n\nCode\nlist.files(\"data/soil/\", full.names = TRUE) %&gt;%\n  read_tsv() %&gt;%\n  select(-time) %&gt;%\n  gather(variable, value, -site, -plot, -lon, -lat) %&gt;%\n  separate(variable, c(\"variable\", \"depth\"), \"_\") %&gt;%\n  separate(depth, c(\"mindepth\", \"depth\"), \"-\") %&gt;%\n  mutate(depth = as.numeric(gsub(\"cm\", \"\", depth))) %&gt;%\n  select(-mindepth) %&gt;%\n  pivot_wider(names_from = variable, values_from = value) %&gt;%\n  mutate(\n    bdod = bdod / 100,\n    cec = cec / 10,\n    cfvo = cfvo / 10,\n    clay = clay / 10,\n    sand = sand / 10,\n    silt = silt / 10,\n    nitrogen = nitrogen / 100,\n    phh2o = phh2o / 10,\n    soc = soc / 10,\n    ocd = ocd / 10,\n    ocs = ocs / 10\n  ) %&gt;%\n  write_tsv(\"outputs/soil.tsv\")\n\n\n\nBAFOG and Paracou are lacking because too close to the sea.\n\nThe plots showed low variation within site but wider variation among sites with for instance sandy soils from Iwokrama opposed to silt and clay soils from Montagne Tortue.\n\n\nCode\nread_tsv(\"outputs/soil.tsv\") %&gt;%\n  select(-lon, -lat, -plot) %&gt;%\n  group_by(site, depth) %&gt;%\n  summarise_all(mean, na.omit = TRUE) %&gt;%\n  gather(variable, value, -site, -depth) %&gt;%\n  mutate(var_long = recode(variable,\n    \"bdod\" = '\"BD [\"~kg~dm^{-3}~\"]\"',\n    \"cec\" = '\"CEC [\"~cmol~kg^{-1}~\"]\"',\n    \"cfvo\" = '\"CF [\"~cm^3~\"100\"~cm^{-3}~\"]\"',\n    \"clay\" = '\"Clay [\"~\"%\"~\"]\"',\n    \"nitrogen\" = '\"N [\"~g~kg^{-1}~\"]\"',\n    \"ocd\" = '\"OCD [\"~kg~dm^{3}~\"]\"',\n    \"ocs\" = '\"OCS [\"~kg~m^{-2}~\"]\"',\n    \"phh2o\" = \"pH\",\n    \"sand\" = '\"Sand [\"~\"%\"~\"]\"',\n    \"silt\" = '\"Silt [\"~\"%\"~\"]\"',\n    \"soc\" = '\"SOC [\"~g~kg^{-1}~\"]\"'\n  )) %&gt;%\n  ggplot(aes(site, value, fill = depth)) +\n  geom_col(aes(group = as.factor(depth)), position = \"dodge\") +\n  facet_wrap(~var_long, scales = \"free_x\", labeller = label_parsed) +\n  theme_bw() +\n  theme(\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 5)\n  ) +\n  scale_fill_viridis_c() +\n  coord_flip()\n\n\n\n\n\nMean soil data per site and depth.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/soil.tsv\") %&gt;%\n  select(-lon, -lat, -plot) %&gt;%\n  group_by(site, depth) %&gt;%\n  summarise_all(mean, na.omit = TRUE) %&gt;%\n  filter(depth == 5) %&gt;%\n  gather(variable, value, -site, -depth) %&gt;%\n  na.omit() %&gt;%\n  mutate(var_long = recode(variable,\n    \"bdod\" = '\"BD [\"~kg~dm^{-3}~\"]\"',\n    \"cec\" = '\"CEC [\"~cmol~kg^{-1}~\"]\"',\n    \"cfvo\" = '\"CF [\"~cm^3~\"100\"~cm^{-3}~\"]\"',\n    \"clay\" = '\"Clay [\"~\"%\"~\"]\"',\n    \"nitrogen\" = '\"N [\"~g~kg^{-1}~\"]\"',\n    \"ocd\" = '\"OCD [\"~kg~dm^{3}~\"]\"',\n    \"ocs\" = '\"OCS [\"~kg~m^{-2}~\"]\"',\n    \"phh2o\" = \"pH\",\n    \"sand\" = '\"Sand [\"~\"%\"~\"]\"',\n    \"silt\" = '\"Silt [\"~\"%\"~\"]\"',\n    \"soc\" = '\"SOC [\"~g~kg^{-1}~\"]\"'\n  )) %&gt;%\n  ggplot(aes(site, value, fill = site)) +\n  geom_col(aes(group = as.factor(depth)), position = \"dodge\") +\n  facet_wrap(~var_long, scales = \"free_y\", labeller = label_parsed) +\n  theme_bw() +\n  theme(\n    legend.position = \"bottom\", axis.title = element_blank(),\n    axis.text.x = element_blank()\n  ) +\n  scale_fill_discrete(\"\")\n\n\n\n\n\nMean soil data per site for top horizon (up to 5cm).\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/soil.tsv\") %&gt;%\n  ggplot(aes(x = sand, y = clay, z = silt, col = site)) +\n  ggtern::coord_tern(L = \"x\", T = \"y\", R = \"z\") +\n  geom_point() +\n  theme_bw() +\n  labs(\n    yarrow = \"Clay [ % ]\",\n    zarrow = \"Silt [ % ]\",\n    xarrow = \"Sand [ % ]\"\n  ) +\n  ggtern::theme_showarrows() +\n  ggtern::theme_hidetitles() +\n  ggtern::theme_clockwise() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nSoil texture for all sites, plots and depths.\n\n\n\n\nThe first ordination axis retained almost half of the variations of the 10 soil variables and opposed sandy poor soils to more fertile silty soils.\n\nThis is a very quick interpretation of the figure and should be explored more in depth.\n\n\n\nCode\nlibrary(ggfortify)\ndata &lt;- read_tsv(\"outputs/soil.tsv\") %&gt;%\n  filter(depth == 5) %&gt;%\n  select(-ocs) %&gt;%\n  na.omit()\npca &lt;- prcomp(data %&gt;% select(-site, -plot, -lat, -lon, -depth), scale. = TRUE)\nautoplot(pca,\n  loadings = TRUE, loadings.label = TRUE,\n  loadings.label.repel = TRUE,\n  data = data, colour = \"site\"\n) +\n  theme_bw() +\n  coord_equal() +\n  scale_color_discrete(\"\")\n\n\n\n\n\nSoil variables PCA per site and plot.\n\n\n\n\n\n\n\n\nPoggio, Laura, Luis M. de Sousa, Niels H. Batjes, Gerard B. M. Heuvelink, Bas Kempen, Eloi Ribeiro, and David Rossiter. 2021. “SoilGrids 2.0: Producing Soil Information for the Globe with Quantified Spatial Uncertainty.” SOIL 7 (1): 217–40. https://doi.org/10.5194/soil-7-217-2021."
  },
  {
    "objectID": "15_landscape.html",
    "href": "15_landscape.html",
    "title": "Landscape",
    "section": "",
    "text": "For the moment we only used information on total forest cover area in a radius of 1-km from TMF (European Commission. Joint Research Centre. 2020). But the radius could be changed and other finer landscape indices could be derived and finer classification from TMF data could be used. Additionally, in landscape metrics WS1 metadata file listed also distance to the nearest village or road which could be simply extracted from openstreetmaps using R (osmdata).\n\n\nCode\nlist.files(\"data/landscape/\", full.names = TRUE) %&gt;%\n  read_tsv() %&gt;%\n  group_by(site, plot, year, forest) %&gt;%\n  summarise(n = n()) %&gt;%\n  group_by(site, plot, year) %&gt;%\n  mutate(n_tot = sum(n)) %&gt;%\n  pivot_wider(names_from = forest, values_from = n) %&gt;%\n  select(-`0`) %&gt;%\n  mutate(`1` = ifelse(is.na(`1`), 0, `1`)) %&gt;%\n  summarise(intact = `1` / n_tot * 100) %&gt;%\n  write_tsv(\"outputs/landscape.tsv\")\n\n\nMost sites showed low deforestation level in the 90s but most of them showed deforestation increasing through time.\n\nThere are issues with locations of Lesong, Malinau, Missiones, Sungai Lalang, Tené, Ulu Muda, and Uppangala that doesn’t fall on forest according to TMF.\n\n\n\nCode\nread_tsv(\"outputs/landscape.tsv\") %&gt;%\n  ggplot(aes(year, 100 - intact, col = site, group = paste(site, plot))) +\n  geom_line() +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(\"Deforested area in a radius of 1-km [ % ]\") +\n  facet_wrap(~site) +\n  scale_color_discrete(guide = \"none\") +\n  scale_y_sqrt()\n\n\n\n\n\nForest cover through time.\n\n\n\n\nMost sites showed less than 10% forest loss cover in 2022, but few sites such as Tapajos km67 lost more than a third of their forest cover.\n\n\nCode\nread_tsv(\"outputs/landscape.tsv\") %&gt;%\n  filter(year == 2022) %&gt;%\n  ggplot(aes(site, 100 - intact, fill = site, group = paste(site, plot))) +\n  geom_col(position = \"dodge\") +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(\"Deforested area in 2022 in a radius of 1-km [ % ]\") +\n  scale_fill_discrete(\" \") +\n  coord_flip() +\n  scale_y_sqrt()\n\n\n\n\n\n2022 forest cover.\n\n\n\n\nAlmost all sites lost forest cover between 1990 and 2022 at the exception of few plots in Sao Nicolau that gained almost 20% of cover.\n\n\nCode\nread_tsv(\"outputs/landscape.tsv\") %&gt;%\n  filter(year %in% c(1990, 2022)) %&gt;%\n  arrange(site, plot, year) %&gt;%\n  group_by(site, plot) %&gt;%\n  mutate(delta = intact - lag(intact)) %&gt;%\n  na.omit() %&gt;%\n  ggplot(aes(site, delta, fill = site, group = paste(site, plot))) +\n  geom_col(position = \"dodge\") +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(\"Forest surface change between 1990 and \n       2022 in a radius of 1-km [ % ]\") +\n  scale_fill_discrete(\" \") +\n  coord_flip()\n\n\n\n\n\nForest cover change between 1990 and 2022.\n\n\n\n\nFor each site we can use the intermediary files to project forest loss through time and derive finer landscape metrics if needed.\n\n\nCode\nread_tsv(\"data/landscape/Tapajós km 67_20E_landscape.tsv\") %&gt;%\n  ggplot(aes(lon, lat, fill = as.factor(forest))) +\n  geom_raster() +\n  facet_wrap(~year) +\n  theme_bw() +\n  coord_equal() +\n  scale_fill_manual(guide = \"none\", values = c(\"black\", \"darkgreen\")) +\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    panel.spacing = unit(0, \"lines\")\n  ) +\n  ggtitle(\"Tapajós km 67 20E forest landscape\")\n\n\n\n\n\nTapajós km 67 20E forest cover through time.\n\n\n\n\n\n\n\n\nEuropean Commission. Joint Research Centre. 2020. Long-term monitoring of tropical moist forest extent (from 1990 to 2019): description of the dataset. LU: Publications Office. https://doi.org/10.2760/70243."
  },
  {
    "objectID": "96_literature.html",
    "href": "96_literature.html",
    "title": "Literature",
    "section": "",
    "text": "This appendix can be used to take notes on useful literature for the project."
  },
  {
    "objectID": "97_meeting.html#kick-off",
    "href": "97_meeting.html#kick-off",
    "title": "Meetings",
    "section": "24/10/04 - Kick-off",
    "text": "24/10/04 - Kick-off\nCamille, Géraldine, Anand, Irié, Mithila, Sylvain"
  },
  {
    "objectID": "98_contributing.html#git",
    "href": "98_contributing.html#git",
    "title": "Contributing",
    "section": "Git",
    "text": "Git\nFirst you’ll need a local installation of Git on your machine.\n\nGit (/ɡɪt/)[8] is a distributed version control system[9] that tracks changes in any set of computer files, usually used for coordinating work among programmers who are collaboratively developing source code during software development. Wikipedia\n\nYou can download and install Git from https://git-scm.com/. If you are looking for more information on Git than the one below I recommend this simple guide: https://rogerdudler.github.io/git-guide/."
  },
  {
    "objectID": "98_contributing.html#github",
    "href": "98_contributing.html#github",
    "title": "Contributing",
    "section": "GitHub",
    "text": "GitHub\nThen you’ll need an account on GitHub.\n\nGitHub (/ˈɡɪthʌb/[a]) is a developer platform that allows developers to create, store, manage and share their code. Wikipedia\n\nSimply go on https://github.com/ and open an account."
  },
  {
    "objectID": "98_contributing.html#fork-the-repository",
    "href": "98_contributing.html#fork-the-repository",
    "title": "Contributing",
    "section": "Fork the repository",
    "text": "Fork the repository\nThen you’ll need to create a copy of the project. Project in Git are stored in repository. The repository versions follow a tree. Creating a copy is then called a fork. To do so, go on the repository page: https://github.com/Bioforest-project/environment . Then use the button on the top right named “Fork” to fork the repository. I recommend you don’t change the name of your copy. More help an be found here: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo."
  },
  {
    "objectID": "98_contributing.html#clone-your-fork",
    "href": "98_contributing.html#clone-your-fork",
    "title": "Contributing",
    "section": "Clone your fork",
    "text": "Clone your fork\nGreat you have an online copy of the project on GitHub, but to work with it on your machine you’ll want a local copy. For that you will want to have a “clone” of the project online locally, and this is called a clone in GitHub too. There are different way of cloning your repository with the green button “&lt;&gt; Code” as explained here: https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository. If you are a windows user discovering all this process, I recommend that you use GitHub Desktop to manage GitHub on your desktop. GitHub Desktop can be found here and is pretty straightforward to use: https://desktop.github.com/. Most command that I will cite later, such as fork or clone, can be found directly inside GitHub Desktop."
  },
  {
    "objectID": "98_contributing.html#r",
    "href": "98_contributing.html#r",
    "title": "Contributing",
    "section": "R",
    "text": "R\nIf you don’t have it already you’ll need to install the R programming language.\n\nR is a programming language for statistical computing and data visualization. It has been adopted in the fields of data mining, bioinformatics, and data analysis.[8] Wikipedia\n\nYou can find it here: https://www.r-project.org/. I recommend that you use a version above 4.0.0."
  },
  {
    "objectID": "98_contributing.html#rstudio",
    "href": "98_contributing.html#rstudio",
    "title": "Contributing",
    "section": "Rstudio",
    "text": "Rstudio\nSimilarly, of you don’t have it already, I recommend that you use R in the RStudio integrated development environment (IDE), besides other IDE such as Visual Code Studio can be used too.\n\nRStudio is an integrated development environment for R, a programming language for statistical computing and graphics. Wikipedia\n\nYou can find RStudio here: https://posit.co/products/open-source/rstudio/."
  },
  {
    "objectID": "98_contributing.html#renv",
    "href": "98_contributing.html#renv",
    "title": "Contributing",
    "section": "renv",
    "text": "renv\nOnce R and Rstudio installed, you can launch Rstudio and install the renv library to manage all needed library for the project. Indeed the project is built using renv to improve reproducibility and collaborative work.\n\nThe renv package helps you create reproducible environments for your R projects. https://rstudio.github.io/renv/articles/renv.html\n\nTo do so you can type in a terminal:\ninstall.pacakges(\"renv\")"
  },
  {
    "objectID": "98_contributing.html#use-the-repository",
    "href": "98_contributing.html#use-the-repository",
    "title": "Contributing",
    "section": "Use the repository",
    "text": "Use the repository\nGreat! Now you are all set-up to work with the project. For that go in your project folder LoggingDiversity/ (there is a short-cut to open the folder in GitHub Desktop). Then you can open it by double clicking the RStudio project file called LoggingDiversity.Rmd.\nFirst you need to install all the packages with renv using:\nrenv::restore()\nIt can be a bit long the first time because it’s setting up the whole environment but will be faster the next time.\nThen as described in the README, you can use the scripts in data/ to generate the data needed to run the project (for the moment only dummy data are available, and data access should be improved later).\nThen you can have a look, modify, or edit text of the analyses. All the analyses are done in the Quarto documents file.qmd. Quarto are reproducible documents that mix text and code and that are the basis of the online pages that you are reading right now. More information on Quarto can be found here: https://quarto.org/.\nOnce you are in a Quarto file, for instance this page corresponds to 98_contributing.qmd, you can add text directly in the document and add R code in the form of chunks using CTRL+ALT+I, or the insert menu for executable cell, or the top right green button in RStudio. You can run the small chunk of code with the green arrow or with CTRL+ENTER as in any R script. To see the resulting document you can use the “Render” button in Rstudio or CTRL+SHIFT+K. Once you’ve finished updating the pages of different documents you can regenerate the whole numerical book in the “Build” panel with the “Render Book” button or CTRL+SHIFT+B.\n\nA description of lintr and styler packages should be added if we decide to keep it."
  },
  {
    "objectID": "98_contributing.html#commit",
    "href": "98_contributing.html#commit",
    "title": "Contributing",
    "section": "Commit",
    "text": "Commit\nOnce you have done modifications that you want to save you can “commit” using Git. It means that you create a new version of your project. For that you can use either GitHub Desktop or the “Git” panel in Rstudio.\nFor Rstudio, in the “Git” panel, check the box of all files for which you want to save informations (but you may ignore some for later). The click on commit. In the pop-up window, add a commit message and click on commit to create a new version.\nCongrats! You contributed locally to the project and created a new version tracked by Git."
  },
  {
    "objectID": "98_contributing.html#push",
    "href": "98_contributing.html#push",
    "title": "Contributing",
    "section": "Push",
    "text": "Push\nNow that you have a new version locally, or several, you may want to save them online. This is called “push” in Git, because you are pushing your local clone to your online repository or “remote” in Git. To do so you can either use GitHub Desktop or the “Git” panel in Rstudio. For Rstudio, in the “Git” panel, use the “Push” green arrow. Then have a look to your online repository, you should have all your changes available online."
  },
  {
    "objectID": "98_contributing.html#pull-request",
    "href": "98_contributing.html#pull-request",
    "title": "Contributing",
    "section": "Pull request",
    "text": "Pull request\nGreat, no you have contributed to the project on your machine and saved a copy online on GitHub. However, you don’t have actually contributed to the original project yet. To do so you need to ask to send your changes to the main project/repository for us to review them and merge them. In Git/GitHub this is called a “Pull Request” because you are requesting that we pull your code into ours. To do so simply follow this guide: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request. Once your pull request is submitted let us handle it. It will open a dialogue page where we can exchange about your modification. We will discuss it with you, and if we all agree your contribution will be merged into the main repository and you will be listed as a project contributor, kudos!"
  },
  {
    "objectID": "98_contributing.html#synchronize-fork",
    "href": "98_contributing.html#synchronize-fork",
    "title": "Contributing",
    "section": "Synchronize fork",
    "text": "Synchronize fork\nLast but not least, if you’ve followed until here, you might have a question: “but what happens if you make changes to the project while I make changes myself?”. Don’t worry Git and GitHub are made for that. At some points if you see that we have made major changes to the project on the main repository and you want to have them back in your fork online and your clone locally you can “Synchronize your fork”: https://docs.github.com/fr/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork."
  },
  {
    "objectID": "98_contributing.html#help",
    "href": "98_contributing.html#help",
    "title": "Contributing",
    "section": "Help",
    "text": "Help\nIf you need help to contribute please preferentially create an issue on GitHub: https://github.com/Bioforest-project/environment/issues. You may however reach us by mail with people from the core group."
  },
  {
    "objectID": "98_contributing.html#contributing-to-this-page",
    "href": "98_contributing.html#contributing-to-this-page",
    "title": "Contributing",
    "section": "Contributing to this page",
    "text": "Contributing to this page\nThis help pages is a test and a work in progress. I’ll try to expand it following help demands in issues. However, if you have any tips or resources that you got while following it, don’t hesitate to add it to the document for the users and next readers.\nHave a nice testing, writing or coding 😉,\nSylvain"
  },
  {
    "objectID": "99_references.html",
    "href": "99_references.html",
    "title": "References",
    "section": "",
    "text": "Abatzoglou, John T., Solomon Z. Dobrowski, Sean A. Parks, and Katherine\nC. Hegewisch. 2018. “TerraClimate, a High-Resolution Global\nDataset of Monthly Climate and Climatic Water Balance from\n19582015.” Scientific Data 5 (1). https://doi.org/10.1038/sdata.2017.191.\n\n\nEuropean Commission. Joint Research Centre. 2020. Long-term\nmonitoring of tropical moist forest extent (from 1990 to 2019):\ndescription of the dataset. LU: Publications Office. https://doi.org/10.2760/70243.\n\n\nPoggio, Laura, Luis M. de Sousa, Niels H. Batjes, Gerard B. M.\nHeuvelink, Bas Kempen, Eloi Ribeiro, and David Rossiter. 2021.\n“SoilGrids 2.0: Producing Soil Information for the Globe with\nQuantified Spatial Uncertainty.” SOIL 7 (1): 217–40. https://doi.org/10.5194/soil-7-217-2021."
  }
]